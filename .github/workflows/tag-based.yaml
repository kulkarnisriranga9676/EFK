name: 'Testing HPA'
run-name: ' Deploying "${{ github.event.inputs.version }}" Service to ${{ github.event.inputs.environment }} From ${{github.ref_name}} with Tag: ${{ github.event.inputs.ImageTag }}'

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Versions"
        default: 'v2'
        required: true
        type: choice
        options:
          - 'normal'
          - 'v1'
          - 'v2'
          - 'pro'
          - 'consumers'
          - 'streams'
          - 'pwc'
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - 'QA'
          - 'UAT'
          - 'Prod'
        
      ImageTag:
        type: string
        description: Deploy_ImageTag
        required: true

env:
  NAMESPACE: hive
  ECR_URL: 123.dkr.ecr.ca-central-1.amazonaws.com
  KUBECONFIG: /root/.kube/config
  HOME_PATH: /home/ubuntu/actions-runner/_work/facadeapi/facadeapi/deployment
  AWS_REGION: ca-central-1
  deploy_version: ${{ github.event.inputs.version }}
  dTag: ${{ github.event.inputs.ImageTag }}
  buildnumber: ${{ github.event.inputs.ImageTag }}
  SERVICEACCOUNT: skyhive

jobs:
  facadeapi-prod:
    if: ${{ github.event.inputs.environment == 'Prod' }}
    environment: production
    name: 'Deploy to Production'
    runs-on: ubuntu-latest
    env:
      spring_profiles_active: ${{ github.event.inputs.version == 'pwc' && 'pwcprod' || 'prod'}}
      AWS_ACCOUNT_ID: 611807204408
      ASSUME_SESSION_NAME: live-env
      ES_INTERNAL_MASTER: 50.0.185.152
      MIN_REPLICAS: 2
      MAX_REPLICAS: 5
    defaults:
      run:
        shell: bash
    steps:
      - name: git repo Checkout
        uses: actions/checkout@v2

      - name: Repo reading
        run: |
          pwd
          ls
          cd apis
          ls -d */ | tr -d '//' >> $HOME_PATH/repo.txt
          cat $HOME_PATH/repo.txt
          sleep 5
      - name: Reading for loop
        run: |
          for i in `cat $HOME_PATH/repo.txt`
            do
              tagName="${dTag}"
              newTagName="${tagName/qa/prod}" # QA image will be promoted to Prod.

              imageName=`echo $i  | tr '[A-Z]' '[a-z]'`
              if [ $imageName == 'employees' ]; then
                MIN_REPLICAS: 3
                MAX_REPLICAS:20
              fi
              echo $imageName
              cd ..
            done
      - name: Printing
        run: |
          tagName="${dTag}"
          newTagName="${tagName/qa/prod}" # QA image will be promoted to Prod.
          # cd deployment
          # sed -i -e "s/ES_INTERNAL_MASTER/${ES_INTERNAL_MASTER}/g" deploy.yaml
          # sed -i -e "s/MIN_REPLICAS/${MIN_REPLICAS}/g" deploy.yaml
          # sed -i -e "s/MAX_REPLICAS/${MAX_REPLICAS}/g" deploy.yaml
          # sed "/image:/ s/$/:$newTagName/" deploy.yaml > deployment.yaml
          # cat deployment.yaml
          # cd ..