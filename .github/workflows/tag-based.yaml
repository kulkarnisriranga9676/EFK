name: 'Testing HPA'
run-name: ' Deploying "${{ github.event.inputs.version }}" Service to ${{ github.event.inputs.environment }} From ${{github.ref_name}} with Tag: ${{ github.event.inputs.ImageTag }}'

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Versions"
        default: 'v2'
        required: true
        type: choice
        options:
          - 'normal'
          - 'v1'
          - 'v2'
          - 'pro'
          - 'consumers'
          - 'streams'
          - 'pwc'
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - 'QA'
          - 'UAT'
          - 'Prod'
        
      ImageTag:
        type: string
        description: Deploy_ImageTag
        required: true

env:
  NAMESPACE: hive
  HOME_PATH: /home/ubuntu/actions-runner/_work/facadeapi/facadeapi/deployment
  deploy_version: ${{ github.event.inputs.version }}
  dTag: ${{ github.event.inputs.ImageTag }}
  buildnumber: ${{ github.event.inputs.ImageTag }}

jobs:
  facadeapi-prod:
    if: ${{ github.event.inputs.environment == 'Prod' }}
    environment: production
    name: 'Deploy to Production'
    runs-on: ubuntu-latest
    env:
      spring_profiles_active: ${{ github.event.inputs.version == 'pwc' && 'pwcprod' || 'prod'}}
      ASSUME_SESSION_NAME: live-env
      ECR_URL: randomurl
      ES_INTERNAL_MASTER: 1.0.2.3
      MIN_REPLICAS: 2
      MAX_REPLICAS: 5
    defaults:
      run:
        shell: bash
    steps:
      - name: git repo Checkout
        uses: actions/checkout@v2

      - name: Repo reading
        run: |
          pwd
          ls
          
          ls apis/ >> repo.txt
          cat repo.txt
          sleep 5
      - name: Reading for loop
        run: |
          for i in `cat repo.txt`
            do
              tagName="${dTag}"
              newTagName="${tagName/qa/prod}" # QA image will be promoted to Prod.

              imageName=`echo $i  | tr '[A-Z]' '[a-z]'`
              if [ $imageName == 'employees' ]; then
                export MIN_REPLICAS=3
                export MAX_REPLICAS=20
              fi
              echo $imageName
            done
      - name: Printing
        run: |
          ls
          tagName="${dTag}"
          newTagName="${tagName/qa/prod}" # QA image will be promoted to Prod.
          sed -i -e "s/ES_INTERNAL_MASTER/${ES_INTERNAL_MASTER}/g" deploy.yaml
          sed -i -e "s/MIN_REPLICAS/${MIN_REPLICAS}/g" deploy.yaml
          sed -i -e "s/MAX_REPLICAS/${MAX_REPLICAS}/g" deploy.yaml
          sed "/image:/ s/$/:$newTagName/" deploy.yaml > deployment.yaml
          i=1
          while IFS= read -r line; do
              declare lhh$((i++))="$line"
          done < repo.txt
          count="$((i-1))"
          for ((j=1; j<=count; j++)); do
            pro=lhh$j
            if [ "${deploy_version}" == "normal" ]; then
              sed -e "s/\${ECR_URL}/${ECR_URL}/g;s/\${project.artifactId}/${!pro}/g;s/\${environment}/${spring_profiles_active}/g;s/SERVICE_NAME/${!pro}/g;" deployment.yaml >> eks.yaml
            else
              sed -e "s/\${ECR_URL}/${ECR_URL}/g;s/\${project.artifactId}/${!pro}-${deploy_version}/g;s/\${environment}/${spring_profiles_active}/g;s/SERVICE_NAME/${!pro}/g" deployment.yaml >> eks.yaml
            fi
          done
          cat eks.yaml
