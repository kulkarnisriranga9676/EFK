# Service
apiVersion: v1
kind: Service
metadata:
  name: ${project.artifactId}
  labels:
    app: ${project.artifactId}
    service: ${project.artifactId}
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: ${project.artifactId}
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${project.artifactId}
  labels:
    app: ${project.artifactId}
    version: v1
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: /actuator/prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${project.artifactId}
      version: v1
  template:
    metadata:
      labels:
        app: ${project.artifactId}
        version: v1
    spec:
      serviceAccountName: skyhive
      hostAliases:
        - ip: ES_INTERNAL_MASTER
          hostnames:
            - es.internal.skyhive.ai
      containers:
        - name: ${project.artifactId}
          image: ${ECR_URL}/SERVICE_NAME
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 600m
            requests:
              cpu: 200m
          env:
            - name: spring_profiles_active
              value: ${environment}
            - name: spring_application_name
              value: SERVICE_NAME
            - name: APPLICATIONINSIGHTS_CONNECTION_STRING
              value: InstrumentationKey=AZURE_KEY
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 180
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 1
          securityContext:
            runAsUser: 1000
---
#HPA
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ${project.artifactId}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ${project.artifactId}
  minReplicas: MIN_REPLICAS
  maxReplicas: MAX_REPLICAS
  targetCPUUtilizationPercentage: 60
---
